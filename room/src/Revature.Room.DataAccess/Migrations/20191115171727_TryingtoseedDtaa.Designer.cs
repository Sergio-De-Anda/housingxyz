// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Revature.Room.DataAccess.Entities;

namespace Revature.Room.DataAccess.Migrations
{
    [DbContext(typeof(RoomServiceContext))]
    [Migration("20191115171727_TryingtoseedDtaa")]
    partial class TryingtoseedDtaa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Revature.Room.DataAccess.Entities.Gender", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Type");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("Revature.Room.DataAccess.Entities.Room", b =>
                {
                    b.Property<Guid>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComplexID")
                        .HasColumnType("uuid");

                    b.Property<string>("GenderType")
                        .HasColumnType("text");

                    b.Property<DateTime>("LeaseEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LeaseStart")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("NumberOfBeds")
                        .HasColumnType("integer");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoomTypeType")
                        .HasColumnType("text");

                    b.HasKey("RoomID");

                    b.HasIndex("GenderType");

                    b.HasIndex("RoomTypeType");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            RoomID = new Guid("d1962b8d-927a-4575-abf5-a7b8dae959f3"),
                            ComplexID = new Guid("ad70c75f-e562-4f8d-891e-a3b7953513f3"),
                            LeaseEnd = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            LeaseStart = new DateTime(2019, 11, 15, 11, 17, 26, 974, DateTimeKind.Local).AddTicks(1090),
                            NumberOfBeds = 4,
                            RoomNumber = "2428B"
                        });
                });

            modelBuilder.Entity("Revature.Room.DataAccess.Entities.RoomType", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Type");

                    b.ToTable("RoomType");
                });

            modelBuilder.Entity("Revature.Room.DataAccess.Entities.Room", b =>
                {
                    b.HasOne("Revature.Room.DataAccess.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderType");

                    b.HasOne("Revature.Room.DataAccess.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeType");
                });
#pragma warning restore 612, 618
        }
    }
}
